$platesize: 350px;
$pitwidth: 32px;
$rimsize: 6px;
$trim: gold;
$trimSecondary: silver;
$spinButton: green;
$resetButton: darkgreen;
$spins: 8;
$from: 1;
$to: 37;
$rotate: (360 / $to)+0deg;

@mixin loop($index) {
  @if $index < $to {
    .number:nth-child(#{$index}) {
      transform: rotateZ($rotate * $index);
    }
    @include loop($index + 1);
  }
}

@include loop($from);

body {
  font-family: "Roboto", sans-serif;
  background: red;
  background-color: #300;
  background-size: 100px 100px;
}

.main {
  width: $platesize + 24;
  height: $platesize + 24;
  position: relative;
  margin: 0 auto;
}

.plate {
  background-color: gray;
  width: $platesize;
  height: $platesize;
  margin: $rimsize * 2;
  border-radius: 50%;
  position: relative;
  animation: rotate 24s infinite linear;

  &:after,
  &:before {
    content: "";
    display: block;
    position: absolute;
    border-radius: 50%;
  }

  &:after {
    top: -$rimsize;
    right: -$rimsize;
    bottom: -$rimsize;
    left: -$rimsize;
    border: $rimsize solid $trim;
    box-shadow: inset 0px 0px 0px $rimsize/3 darken($trim, 15%),
      0px 0px 0px $rimsize/3 lighten($trim, 25%);
  }

  &:before {
    background: rgba(0, 0, 0, 0.65);
    border: 1px solid $trimSecondary;
    box-shadow: inset 0px 0px 0px 2px darken($trimSecondary, 25%);
    top: 12%;
    left: 12%;
    right: 12%;
    bottom: 12%;
    z-index: 1;
  }
}
.data {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.ball {
  position: absolute;
  top: 15%;
  left: 0;
  transform-origin: 100% 50%;
  position: absolute;
  left: calc(50% - 10px);
  width: 20px;
  height: 20px;
  background-color: white;
  border-radius: 50%;
  animation: rotateBall 2s infinite linear;
}

.number {
  width: $pitwidth;
  height: $platesize/2;
  display: inline-block;
  text-align: center;
  position: absolute;
  top: 0;
  left: calc(50% - ($pitwidth/2));
  transform-origin: 50% 100%;
  background-color: transparent;
  border-left: $pitwidth/2 solid transparent;
  border-right: $pitwidth/2 solid transparent;
  border-top: $platesize/2 solid black;
  box-sizing: border-box;
  &:nth-child(odd) {
    border-top-color: red;
  }
  &:nth-child(#{$to}) {
    border-top-color: green;
  }
}

.pit {
  color: #ffffff;
  padding-top: 12px;
  width: $pitwidth;
  display: inline-block;
  font-size: 12px;
  transform: scale(1, 1.8);
  position: absolute;
  top: -$platesize/2;
  left: -$pitwidth/2;
}

.inner {
  display: block;
  height: $platesize;
  width: $platesize;
  position: relative;

  animation: rotate 24s infinite linear;

  &:after,
  &:before {
    content: "";
    display: block;
    position: absolute;
    border-radius: 50%;
  }

  &:after {
    z-index: 3;
    top: 24%;
    right: 24%;
    bottom: 24%;
    left: 24%;
    background-color: darken($trimSecondary, 45%);
    box-shadow: inset 0px 0px 0px 2px darken($trimSecondary, 10%),
      0px 0px 0px 2px lighten($trimSecondary, 45%);
  }

  &:before {
    top: 26%;
    right: 26%;
    bottom: 26%;
    left: 26%;
    background-color: rgba(0, 0, 0, 0.65);
    border: 1px solid $trimSecondary;
    box-shadow: inset 0px 0px 0px 2px darken($trimSecondary, 25%),
      0px 0px 0px 2px lighten($trimSecondary, 25%);
  }
}

.pointer {
  width: 0;
  height: 0;
  position: absolute;
  top: calc(50% - $pitwidth * 2);
  left: calc(50% - $pitwidth * 0.2);
  border-left: $pitwidth * 0.2 solid transparent;
  border-right: $pitwidth * 0.2 solid transparent;
  border-bottom: $pitwidth * 2 solid darken($trim, 15%);
  z-index: 5;
}

.button {
  width: 150px;
  height: 40px;
  display: block;
  position: absolute;
  bottom: -60px;
  left: calc(50% - 75px);
  background-color: $spinButton;
  border: 2px solid darken($spinButton, 15%);
  border-radius: 5px;
  color: #fff;
  text-align: center;
  line-height: 40px;
  cursor: pointer;

  &:hover {
    background-color: darken($spinButton, 5%);
  }
}

.reset {
  background-color: $resetButton;
  border: 2px solid darken($resetButton, 15%);

  &:hover {
    background-color: darken($resetButton, 5%);
  }
}

@keyframes rotate {
  0% {
    transform: rotateZ(0deg);
  }
  100% {
    transform: rotateZ(-1turn);
  }
}

@keyframes rotateBall {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(-360deg);
  }
}
